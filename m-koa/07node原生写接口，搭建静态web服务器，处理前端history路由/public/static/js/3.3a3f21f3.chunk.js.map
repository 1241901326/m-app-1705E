{"version":3,"sources":["views/MyBook.js"],"names":["MyBook","index","e","bookList","this","props","checked","target","setState","forEach","item","ids","filter","map","id","Api","bookDelete","then","res","data","code","count","bookListNew","JSON","parse","stringify","bookUpdate","handleUpdateBookList","getBookList","bookListDom","key","type","onChange","handleSelect","bind","title","price","onClick","handleSub","handleAdd","handleDelete","totalPrice","totalCount","length","handleSelectAll","handleDeleteSelected","Component","connect","state","a","dispatch","value"],"mappings":"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","file":"static/js/3.3a3f21f3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Api from '../api'\r\n\r\nclass MyBook extends Component {\r\n  //选中某一本书，或者取消选中\r\n  handleSelect(index, e) {\r\n    let { bookList } = this.props\r\n    bookList[index].checked = e.target.checked\r\n    this.props.setState('bookList', bookList)\r\n  }\r\n\r\n  //全选，包括联动\r\n  handleSelectAll(e) {\r\n    let { bookList } = this.props\r\n\r\n    bookList.forEach(item => {\r\n      item.checked = e.target.checked\r\n    })\r\n    this.props.setState('bookList', bookList)\r\n  }\r\n\r\n  //删除多个\r\n  handleDeleteSelected() {\r\n    let { bookList } = this.props\r\n    let ids = bookList.filter(item => item.checked).map(item => item.id)\r\n    Api.bookDelete({ids}).then(res => {\r\n      if (res.data.code === 200) {\r\n        this.props.setState('bookList', res.data.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  //删除单个\r\n  handleDelete(ids) {\r\n    Api.bookDelete({ids}).then(res => {\r\n      if (res.data.code === 200) {\r\n        this.props.setState('bookList', res.data.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  //加\r\n  handleAdd(index) {\r\n    let { bookList } = this.props\r\n    bookList[index].count += 1\r\n    let bookListNew = JSON.parse(JSON.stringify(bookList))\r\n    this.props.setState('bookList', bookListNew)\r\n  }\r\n\r\n  //减\r\n  handleSub(index) {\r\n    let { bookList } = this.props\r\n    if (bookList[index].count > 1) {\r\n      bookList[index].count -= 1\r\n      let bookListNew = JSON.parse(JSON.stringify(bookList))\r\n      this.props.setState('bookList', bookListNew)\r\n    }\r\n  }\r\n\r\n  //存到后端\r\n  handleUpdateBookList() {\r\n    let { bookList } = this.props\r\n    Api.bookUpdate({bookListNew:bookList}).then(res => {\r\n\r\n    })\r\n  }\r\n\r\n  //更新完成\r\n  componentDidUpdate() {\r\n    this.handleUpdateBookList()\r\n  }\r\n\r\n  //挂载，从接口里获取书包的数据，然后放到redux里\r\n  componentDidMount() {\r\n    Api.getBookList().then(res => {\r\n      if (res.data.code === 200) {\r\n        this.props.setState('bookList', res.data.data)\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    let { bookList } = this.props\r\n    const bookListDom = bookList.map((item, index) => (\r\n      <div key={item.id}>\r\n        <input type=\"checkbox\" checked={ item.checked }  onChange={this.handleSelect.bind(this, index)}></input>\r\n        {item.title},价格：{item.price}元，<button onClick={this.handleSub.bind(this, index)}>-</button>{item.count}<button onClick={this.handleAdd.bind(this, index)}>+</button>\r\n        <button onClick={this.handleDelete.bind(this, [item.id])}>删除</button></div>\r\n    )) \r\n\r\n    let totalPrice = 0, totalCount = 0\r\n    bookList.filter(item => item.checked).forEach(item => {\r\n      totalCount += item.count\r\n      totalPrice += item.count * item.price\r\n    })\r\n    let count = bookList.filter(item => item.checked).length\r\n    return (\r\n      <div>\r\n        <input type=\"checkbox\" checked={bookList.length === count} onChange={this.handleSelectAll.bind(this)} ></input> 全选\r\n        <button onClick={this.handleDeleteSelected.bind(this)}>删除选中的</button>\r\n        {bookListDom}\r\n        <div>总价：{totalPrice}元，总数：{totalCount}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bookList: state.bookList,\r\n    a: []\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setState(key, value) {\r\n      dispatch({ type: 'SET_STATE', key, value })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBook)\r\n"],"sourceRoot":""}